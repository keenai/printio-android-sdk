apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    jcenter()
    mavenCentral()
}

group = 'com.gooten'
version = '3.3.18'

android {
    compileSdkVersion 24
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 23
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
        }
    }

    lintOptions {
        abortOnError false
    }
}

task javadoc(type: Javadoc) {
    //source = android.sourceSets.main.java.srcDirs
    //classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    //classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
    source = files("../../printio-android/src/print")
    classpath = files("../../printio-android/bin/classes/print", project.android.getBootClasspath().join(File.pathSeparator))
    //destinationDir = file("../javadoc/")
    options {
        links "http://docs.oracle.com/javase/7/docs/api/"
        linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
    }
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
    exclude '**/it/'
    exclude '**/com/'
    failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

/*
uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: sonatypeRepo) {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom.project {
            name 'Gooten Android SDK'
            packaging 'aar'
            description 'Gooten custom print fulfillment service Android SDK'
            url 'https://www.gooten.com'

            scm {
                url 'git@github.com:printdotio/printio-android-sdk.git'
                connection 'scm:git:git@github.com:printdotio/printio-android-sdk.git'
                developerConnection 'scm:git:git@github.com:printdotio/printio-android-sdk.git'
            }

            licenses {
                license {
                    name 'Gooten License'
                    url 'https://github.com/printdotio/printio-android-sdk/blob/master/LICENSE.md'
                }
            }

            developers {
                developer {
                    id 'bomberaya'
                    name 'Bojan Radivojevic'
                    email 'bojan@gooten.com'
                }
                developer {
                    id 'vlado'
                    name 'Vlado Pajic'
                    email 'vlado@gooten.com'
                }
            }
        }
    }
}
*/

dependencies {
    compile 'com.facebook.android:facebook-android-sdk:4.5.0'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.amazonaws:aws-android-sdk-core:2.2.18'
    compile 'com.amazonaws:aws-android-sdk-cognito:2.2.18'
    compile 'com.amazonaws:aws-android-sdk-s3:2.2.18'
    compile 'com.braintreepayments:encryption:2.1.0'
    compile('com.paypal.sdk:paypal-android-sdk:2.13.3') {
        exclude group: 'io.card'
    }
    compile files('libs/printiosdk.jar')
}
